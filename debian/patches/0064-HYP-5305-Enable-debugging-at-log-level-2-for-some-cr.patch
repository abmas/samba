From: Ashok Ramakrishnan <ashok.ramakrishnan@hpe.com>
Date: Thu, 21 Sep 2017 15:30:54 -0400
Subject: HYP-5305: Enable debugging at log level 2 for some critical durable
 reconnect messages.

---
 source3/param/loadparm.c   | 8 ++++----
 source3/smbd/smb2_create.c | 8 ++++----
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/source3/param/loadparm.c b/source3/param/loadparm.c
index 7d8ce67..35a513c 100644
--- a/source3/param/loadparm.c
+++ b/source3/param/loadparm.c
@@ -116,24 +116,24 @@ extern volatile int svtfs_lockdir_index;
 void svtfs_set_lockdir_index (int index)
 {
 	svtfs_lockdir_index = index;
-	DEBUG(2,("svtfs_set_lockdir_index: setting lockdir index to %d\n",svtfs_lockdir_index));
+	DEBUG(3,("svtfs_set_lockdir_index: setting lockdir index to %d\n",svtfs_lockdir_index));
 }
 
 int svtfs_get_lockdir_index (void)
 {
-	DEBUG(2,("svtfs_get_lockdir_index: returning lockdir index of %d\n",svtfs_lockdir_index));
+	DEBUG(3,("svtfs_get_lockdir_index: returning lockdir index of %d\n",svtfs_lockdir_index));
 	return svtfs_lockdir_index;
 }
 
 void svtfs_set_index_for_ip (const char * ipv4addr)
 {
 	int index;
-	DEBUG(2,("Entering svtfs_set_index_for_ip with addr %s\n",ipv4addr));
+	DEBUG(3,("Entering svtfs_set_index_for_ip with addr %s\n",ipv4addr));
 	index = 0;
 	while (svtfs_storage_ip[index] != NULL) {
 		if ( 0 == strcmp(svtfs_storage_ip[index],ipv4addr)) {
 			svtfs_lockdir_index = index;
-			DEBUG(2,("svtfs_set_index_for_ip Setting Globals.svtfs_lockdir_index to %d\n",index));
+			DEBUG(3,("svtfs_set_index_for_ip Setting Globals.svtfs_lockdir_index to %d\n",index));
 			return;
 		}
 		index++;
diff --git a/source3/smbd/smb2_create.c b/source3/smbd/smb2_create.c
index a534e45..0cce24a 100644
--- a/source3/smbd/smb2_create.c
+++ b/source3/smbd/smb2_create.c
@@ -1068,14 +1068,14 @@ static struct tevent_req *smbd_smb2_create_send(TALLOC_CTX *mem_ctx,
 						persistent_id, create_guid,
 						now, &op);
 			if (!NT_STATUS_IS_OK(status)) {
-				DEBUG(3, ("smbd_smb2_create_send: "
+				DEBUG(2, ("smbd_smb2_create_send: "
 					  "smb2srv_open_recreate failed: %s\n",
 					  nt_errstr(status)));
 				tevent_req_nterror(req, status);
 				return tevent_req_post(req, ev);
 			}
 
-			DEBUG(10, ("smb2_create_send: %s to recreate the "
+			DEBUG(2, ("smb2_create_send: %s to recreate the "
 				   "smb2srv_open struct for a durable handle.\n",
                                    (op->global->durable || op->global->resilient || op->global->persistent) ? "succeded" : "failed"));
 
@@ -1105,7 +1105,7 @@ static struct tevent_req *smbd_smb2_create_send(TALLOC_CTX *mem_ctx,
 
 				return_status = NT_STATUS_OBJECT_NAME_NOT_FOUND;
 
-				DEBUG(3, ("smbd_smb2_create_send: "
+				DEBUG(2, ("smbd_smb2_create_send: "
 					  "durable_reconnect failed: %s => %s\n",
 					  nt_errstr(status),
 					  nt_errstr(return_status)));
@@ -1114,7 +1114,7 @@ static struct tevent_req *smbd_smb2_create_send(TALLOC_CTX *mem_ctx,
 				return tevent_req_post(req, ev);
 			}
 
-			DEBUG(10, ("result->oplock_type=%u, lease_ptr==%p\n",
+			DEBUG(2, ("result->oplock_type=%u, lease_ptr==%p\n",
 				   (unsigned)result->oplock_type, lease_ptr));
 
 			status = smbd_smb2_create_durable_lease_check(
