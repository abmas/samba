From: Ashok Ramakrishnan <ashok.ramakrishnan@simplivity.com>
Date: Mon, 5 Mar 2018 09:22:32 -0500
Subject: HYP-6173: Wait for child winbind processes to exit before
 terminating parent. Enhance logging in smbd exit.

---
 source3/smbd/server_exit.c  | 13 ++++++++++---
 source3/winbindd/winbindd.c | 12 ++++++++++++
 2 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/source3/smbd/server_exit.c b/source3/smbd/server_exit.c
index eb75bdd..66f2e6d 100644
--- a/source3/smbd/server_exit.c
+++ b/source3/smbd/server_exit.c
@@ -94,11 +94,18 @@ static void exit_server_common(enum server_exit_reason how,
 	struct smbXsrv_connection *xconn = NULL;
 	struct smbd_server_connection *sconn = NULL;
 	struct messaging_context *msg_ctx = server_messaging_context();
-	pid_t wpid;
-	int status;
+	pid_t wpid = 0;
+	int status = 0;
 
 	/* First wait for all children to exit */
-	while (am_parent && ((wpid = wait(&status)) > 0));
+	if (am_parent) {
+		while ((wpid = wait(&status)) > 0);
+		if (errno == ECHILD) {
+			DEBUG(0,("All child processes exited\n"));
+		} else {
+			DEBUG(0,("Error waiting for child processes, proceeding with exit\n"));
+		}
+	}
 
 	if (client != NULL) {
 		sconn = client->sconn;
diff --git a/source3/winbindd/winbindd.c b/source3/winbindd/winbindd.c
index d555127..91140b0 100644
--- a/source3/winbindd/winbindd.c
+++ b/source3/winbindd/winbindd.c
@@ -7,6 +7,8 @@
    Copyright (C) Andrew Tridgell 2002
    Copyright (C) Jelmer Vernooij 2003
    Copyright (C) Volker Lendecke 2004
+   Copyright Â© Hewlett Packard Enterprise Development LP 2018
+     Added support for Hyper-V over SMB 3.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -227,7 +229,17 @@ static void flush_caches_noinit(void)
 
 static void terminate(bool is_parent)
 {
+	pid_t wpid = 0;
+	int status = 0;
 	if (is_parent) {
+		/* First wait for all child processes to terminate */
+		while ((wpid = wait(&status)) > 0);
+		if (errno == ECHILD) {
+			DEBUG(0,("All child processes exited\n"));
+		} else {
+			DEBUG(0,("Error waiting for child processes, proceeding with exit\n"));
+		}
+
 		/* When parent goes away we should
 		 * remove the socket file. Not so
 		 * when children terminate.
